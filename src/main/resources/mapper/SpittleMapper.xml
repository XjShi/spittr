<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spittr.mapper.SpittleMapper">
    <sql id="spittleDetailColumns">
      spittle.id AS spittle_id,
      spittle.username AS spittle_username,
      spittle.text as spittle_text,
      spittle.created_at as spittle_created_at,
      spittle.repost as spittle_repost,
      spittle.like AS spittle_like,
      spittle.enabled AS spittle_enabled,
      comment.id AS comment_id,
      comment.username AS comment_username,
      comment.commented_id AS comment_commented_id,
      comment.spittle_id AS commented_spittle_id,
      comment.text AS comment_text,
      comment.create_time AS comment_create_time,
      comment.enabled AS comment_enabled,
      spittle_attachment.id AS attachment_id,
      spittle_attachment.attach_type AS attachment_attach_type,
      spittle_attachment.attach_content AS attachment_attach_content,
      spittle_attachment.spittle_id AS attachment_spittle_id
    </sql>

    <resultMap id="spittleResultMap" type="com.spittr.pojo.Spittle">
        <id column="spittle_id" property="id"/>
        <result column="spittle_username" property="username"/>
        <result column="spittle_text" property="text"/>
        <result column="spittle_created_at" property="publishTime"/>
        <result column="spittle_repost" property="repost"/>
        <result column="spittle_enabled" property="enabled"/>
        <result column="like" property="like"/>
        <collection property="commentList" ofType="com.spittr.pojo.Comment"
                    resultMap="com.spittr.mapper.CommentMapper.commentResultMap"/>
        <collection property="attachmentList" ofType="com.spittr.pojo.Attachment"
                    resultMap="com.spittr.mapper.SpittleAttachmentMapper.attachmentResultMap"/>
    </resultMap>

    <select id="selectAll" resultMap="spittleResultMap">
        SELECT
        <include refid="spittleDetailColumns"/>
        FROM spittle LEFT JOIN comment ON spittle.id = comment.spittle_id
        LEFT JOIN spittle_attachment ON spittle.id = spittle_attachment.spittle_id
    </select>

    <select id="selectOne" resultMap="spittleResultMap" parameterType="long">
        SELECT
        <include refid="spittleDetailColumns"/>
        FROM spittle LEFT JOIN comment ON spittle.id = comment.spittle_id
        LEFT JOIN spittle_attachment ON spittle.id = spittle_attachment.spittle_id
        WHERE 1=1 AND spittle.id=#{id}
    </select>

    <select id="selectByUsername" resultMap="spittleResultMap">
        SELECT
        <include refid="spittleDetailColumns"/>
        FROM spittle LEFT JOIN comment ON spittle.id = comment.spittle_id
        LEFT JOIN spittle_attachment ON spittle.id = spittle_attachment.spittle_id
        WHERE 1=1 AND spittle.username=#{username}
    </select>

    <select id="getLatestOne" resultMap="spittleResultMap" parameterType="String">
        SELECT
        <include refid="spittleDetailColumns"></include>
        FROM spittle LEFT JOIN comment ON spittle.id = comment.spittle_id
        LEFT JOIN spittle_attachment ON spittle.id = spittle_attachment.spittle_id
        WHERE 1=1 AND spittle.username=#{username}
        ORDER BY created_at DESC
        LIMIT 1
    </select>

    <select id="selectSpittleCountById" parameterType="long" resultType="java.lang.Integer">
        SELECT COUNT(id)
        FROM spittle
        WHERE id=#{id}
    </select>

    <insert id="insertSpittle" parameterType="com.spittr.pojo.Spittle" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO spittle(username,text,created_at,enabled)
        VALUES(#{username},#{text},#{publishTime},#{enabled})
    </insert>

    <delete id="deleteSpittleById" parameterType="Long">
        DELETE FROM spittle WHERE id=#{id}
    </delete>

</mapper>